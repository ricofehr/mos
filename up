#!/bin/bash -e

PROVIDER="virtualbox"
LIBVIRTDRIVER=""
K8SDEPLOY=0
ISDESTROY=0

# Help function
deployhelp() {
  cat <<EOF
Usage: $0 [options]
-h           this is some help text.
-d           destroy all previously openstack install
-p xxxx      vagrant provider, default is virtualbox
-k           deploy k8s onto 3 vms (1 master and 2 nodes) after openstack install
EOF

exit 1
}

# Parse cmd options
while (($# > 0)); do
  case "$1" in
    -d)
      shift
      ISDESTROY=1
      ;;
    -p)
      shift
      PROVIDER="$1"
      shift
      ;;
    -k)
      shift
      K8SDEPLOY=1
      ;;
    -h)
      shift
      deployhelp
      ;;
    *)
      shift
      deployhelp
      ;;
  esac
done

# Clean older bootstrap
if ((ISDESTROY == 1)); then
  vagrant destroy -f || echo "No vms previously installed"
fi

# Create vdi disk folder
if [[ "$PROVIDER" = "libvirt" ]]; then
  LIBVIRTDRIVER="kvm"
else
  LIBVIRTDRIVER="qemu"
  sudo mkdir -p /datas/os
  sudo chmod 777 /datas/os
fi

# Launch vagrant vms
vagrant up --provider=$PROVIDER
sleep 10

# Disable cowsay ansible output
export ANSIBLE_NOCOWS=1

# Deploy an openstack installation
pushd ansible >/dev/null
ansible-playbook --ssh-extra-args "-C -o ControlMaster=auto -o ControlPersist=60s -o ConnectTimeout=30 -o ConnectionAttempts=5 -o StrictHostKeyChecking=no" -i inventory playbook.yml --extra-vars "libvirt_driver=$LIBVIRTDRIVER"
popd >/dev/null

# Execute postinstall stuffs for openstack: import a glance image, network and subnets config
pushd ansible_post >/dev/null
ansible-playbook --ssh-extra-args "-C -o ControlMaster=auto -o ControlPersist=60s -o ConnectTimeout=30 -o ConnectionAttempts=5 -o StrictHostKeyChecking=no" -i inventory playbook.yml --extra-vars "k8s_deploy=$K8SDEPLOY"
popd >/dev/null
