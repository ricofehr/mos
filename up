#!/bin/bash -e

PROVIDER="virtualbox"
LIBVIRTDRIVER=""
K8SDEPLOY=0
ISDESTROY=0
LIBVIRTDRIVER="kvm"
SIZING=small

# Help function
deployhelp() {
  cat <<EOF
Usage: $0 [options]
-h           this is some help text.
-d           destroy all previously openstack install
-k           deploy k8s onto 6 vms (1 master and 5 nodes) after openstack install ending
-p xxxx      vagrant provider, default is virtualbox
-s xxxx      sizing deployment, default is small
              - small : host with 32Go ram / 4 cores / 300Go free disk space
              - medium : host with 64Go ram / 6 cores / 600Go free disk space
              - large : host with 96Go ram / 8 cores / 1000Go free disk space
              - xlarge : host with 128Go ram / 12 cores / 1500Go free disk space
EOF

exit 1
}

# Parse cmd options
while (($# > 0)); do
  case "$1" in
    -d)
      shift
      ISDESTROY=1
      ;;
    -p)
      shift
      PROVIDER="$1"
      shift
      ;;
    -k)
      shift
      K8SDEPLOY=1
      ;;
    -s)
      shift
      SIZING=$1
      shift
      ;;
    -h)
      shift
      deployhelp
      ;;
    *)
      shift
      deployhelp
      ;;
  esac
done

# Ensure valid sizing
[[ -f vagrantfiles/Vagrantfile_${SIZING} ]] || SIZING=small

# Clean older bootstrap
if ((ISDESTROY == 1)); then
  vagrant destroy -f || echo "No vms previously installed"
fi

# nested virt is disabled on Ventura for virtualbox
if [[ "$PROVIDER" == "virtualbox" ]]; then
  LIBVIRTDRIVER="qemu"
fi

# nested virt is not full on current version of Fusion with Ventura
if [[ "$PROVIDER" == "vmware_desktop" ]]; then
  LIBVIRTDRIVER="qemu"
fi

# kvm provider causes kernel panic on current version of Parallels with Ventura
if [[ "$PROVIDER" == "parallels" ]]; then
  LIBVIRTDRIVER="qemu"
fi

# Launch vagrant vms
ln -sf vagrantfiles/Vagrantfile_${SIZING} Vagrantfile
VAGRANT_EXPERIMENTAL="disks" vagrant up --provider=$PROVIDER
sleep 10

# Disable cowsay ansible output
export ANSIBLE_NOCOWS=1

mkdir -p tmp

# Deploy an openstack installation
pushd ansible >/dev/null
ln -sf inventories/inventory_${SIZING} inventory
ln -sf sizing_vars/sizing_vars_${SIZING}.yml sizing_vars.yml
ansible-playbook --ssh-extra-args="-C -o ControlMaster=auto -o ControlPersist=60s -o ConnectTimeout=30 -o ConnectionAttempts=5 -o StrictHostKeyChecking=no" -i inventory playbook.yml --extra-vars "global_os_nova_virt_type=$LIBVIRTDRIVER" --extra-vars "global_k8s_deploy=$K8SDEPLOY" 2>&1 | tee ../tmp/openstack-deploy.log
popd >/dev/null

