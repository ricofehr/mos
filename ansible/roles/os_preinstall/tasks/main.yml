---

- name: Copy local vagrant private key file to osinstaller
  become: true
  ansible.builtin.copy:
    src: ~/.vagrant.d/insecure_private_key
    dest: ~/.ssh/id_rsa
    mode: '0600'

- name: Clone openstack-ansible repo
  become: true
  ansible.builtin.git:
    repo: "{{ os_preinstall_osa_repository }}"
    version: "{{ os_preinstall_osa_version }}"
    dest: /opt/openstack-ansible

- name: Bootstrap the openstack-ansible project
  become: true
  ansible.builtin.command: ./scripts/./bootstrap-ansible.sh
  args:
    chdir: /opt/openstack-ansible
    creates: "{{ os_preinstall_firstboot_creates_path }}"

- name: Prepare openstack_deploy etc folder
  become: true
  ansible.posix.synchronize:
    src: /opt/openstack-ansible/etc/openstack_deploy
    dest: /etc/
  delegate_to: "{{ inventory_hostname }}"

- name: Install python3-yaml library
  become: true
  ansible.builtin.apt:
    name: python3-yaml
    state: present

- name: Default secrets
  become: true
  ansible.builtin.command: python3 pw-token-gen.py --file /etc/openstack_deploy/user_secrets.yml
  args:
    chdir: /opt/openstack-ansible/scripts
    creates: "{{ os_preinstall_firstboot_creates_path }}"

- name: Override horizon admin password
  become: true
  ansible.builtin.lineinfile:
    path: /etc/openstack_deploy/user_secrets.yml
    regexp: '^keystone_auth_admin_password:'
    line: "keystone_auth_admin_password: {{ os_preinstall_admin_password }}"

- name: Define openstack_user_config.yml file
  become: true
  ansible.builtin.template:
    src: templates/openstack_user_config.yml.j2
    dest: /etc/openstack_deploy/openstack_user_config.yml
    mode: '0644'

- name: Define user_variables.yml file
  become: true
  ansible.builtin.template:
    src: templates/user_variables.yml.j2
    dest: /etc/openstack_deploy/user_variables.yml
    mode: '0644'

- name: Ensure infra nodes are resolved into hosts file
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    line: "{{ os_preinstall_mgmt_network }}.{{ item.suffix }} {{ item.name }}"
    state: present
  loop: "{{ os_preinstall_infra_nodes }}"

...
